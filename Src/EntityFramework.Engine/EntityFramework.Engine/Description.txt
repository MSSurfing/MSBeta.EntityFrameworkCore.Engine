文件归类是一个非常考验组织能力的问题！！！
	再这个项目中，我尝试根据功能紧密程度进行分类。
	比如：
		Repositories文件夹中所有的类均与Repositories紧密结合。
		但也会带来一个问题，命名空间的分类问题。
		在以往的分类中，均是以架构紧密程度(同是命名空间)分类，
			因此框架的基本功能会在一个命名空间，而扩展类会在一个命名空间/文件夹。
		参考较好的项目源码，会是两种都使用。

	这里有一个分类的分歧问题，EfRepositoryException是应放在Repositories中还是与所有Exceptions放一起？
		我选择了与Exceptions放一起。

计划实现
	1、预留数据库初始化接口
	2、预留数据库迁移/备份接口
	3、NetCore中不支持SqlCompact（如何解决轻量数据库问题）
	4、支持MySql


=====================
20181206_2001
	删除了 InsertLine的以Line结尾的格式，因为做为核心类库不必要/不应提供返回bool的扩展。
	所为返回bool的扩展是，默认Insert返回int,有时候我们代码中只需要返回ture.
	因此在RepositoryExtensions中实现了该扩展，但想了想，还是不应该提供，应由应用者自己进行扩展。

20181206_2030
	删除了 Config加载、存储的管理类，因为还没有想好。
	应重新写一个类，用于管理Cofnig信息，并能加密链接信息。
	另外 EfeConfig，可以支持使用.json /.txt 或使用web.config的配置。